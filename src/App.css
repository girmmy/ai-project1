* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

html, body {
  height: 100%; /* Use 100% instead of 100vh */
  margin: 0;
  overflow: hidden; /* Hide overflow */
}

:root {
  --header-height: 4rem; /* Header height */
  --input-height: 4rem; /* Input field height, adjust as needed */
}

/* Base styles for the app */
#root {
  display: flex;
  flex-direction: column;
  height: 100%; /* Changed to 100% to fill the height */
  width: 100vw;
  overflow-x: hidden;
}

.app-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #646cff;
  height: var(--header-height);
  padding: 0 2rem;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  z-index: 2;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

.app-header h1 {
  color: #FFFFFF; 
  font-size: 1.5rem; 
  font-family: 'Roboto', 'Arial', sans-serif;
}

/* Logo styles */
.logo {
  width: 3rem; /* Set a fixed width for the logo */
  max-width: 100%; /* Ensure logo is not bigger than its container */
  transition: transform 0.3s ease-in-out; /* Smooth transition for hover effects */
}

.logo:hover {
  transform: scale(1.05); /* Slightly enlarge logo on hover */
  filter: drop-shadow(0 0 2em #646cffaa); /* Glow effect on hover */
}

/* Chat message styles */
.App {
  flex: 1;
  display: flex;
  flex-direction: column; /* Stack children vertically */
  overflow-y: auto; /* Allow vertical scrolling */
  padding-top: var(--header-height); /* Push content down below the header */
  padding-bottom: var(--input-height); /* Make space for the input field */
}

/* Adjust the MessageList to account for the header and input field */
.MessageList {
  flex: 1; /* Take up all available space */
  overflow-y: auto; /* Allow scrolling */
}

/* Ensure the MessageInput is visible above any mobile browser UI */
.MessageInput {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: var(--input-height);
  z-index: 2;
}

/* Use safe-area-inset-bottom for devices with a bottom safe area */
@supports (padding-bottom: env(safe-area-inset-bottom)) {
  .App {
    padding-bottom: calc(var(--input-height) + env(safe-area-inset-bottom));
  }

  .MessageInput {
    bottom: env(safe-area-inset-bottom);
  }
}

@media (max-width: 500px) {
  .App{
    padding-top: 0px;
    padding-bottom: 0px;
  }
}